@model Rent_a_Car.Models.AutoType

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "AutoTypes", FormMethod.Post, new { @class = "form-horizontal", role = "form", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>AutoType</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)

    <div class="form-group">
        @Html.LabelFor(model => model.Merk, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Merk, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Merk, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LaadRuimte, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LaadRuimte, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LaadRuimte, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.SchakelTypeID, "SchakelTypeID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("SchakelTypeID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.SchakelTypeID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Trekhaak, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Trekhaak)
                @Html.ValidationMessageFor(model => model.Trekhaak, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ZitPlaatsen, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.ZitPlaatsen, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ZitPlaatsen, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.BrandstofID, "BrandstofID", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("BrandstofID", null, htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.BrandstofID, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Gewicht, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Gewicht, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Gewicht, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AantalDeuren, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AantalDeuren, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AantalDeuren, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Uitvoering, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Uitvoering, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Uitvoering, "", new { @class = "text-danger" })
        </div>
    </div>
    <span class="control-label">Price</span><br />
    <input type="text" name="price" value="@Math.Round(Model.AutoPrijs.Where(t => t.AutoTypeID == Model.ID && DateTime.Now > t.StartDatum && t.EindDatum == null).First().Prijs, 2)" class="form-control" /> <br />


    @{
        if (Model.Foto != null && Model.Foto.Length > 0)
        {

            var base64 = Convert.ToBase64String(Model.Foto);
            var imgSrc = String.Format("data:image;base64,{0}", base64);

            <img src="@imgSrc" class="image" style="max-height: 281.5px; max-width: 500px" />
        }
        else
        {
            <img src="~/Content/Placeholder_car.jpg" class="image" style="max-height: 281.5px; max-width: 500px" />
        }

    }<br />



    <div class="form-group">
        @Html.LabelFor(model => model.Foto, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="upload" id="upload" accept=".png,.jpg,.jpeg,.gif,.tif" />
            @Html.ValidationMessageFor(model => model.Uitvoering, "", new { @class = "text-danger" })
        </div>
    </div>






    <div class="form-group">
        @Html.LabelFor(model => model.Beschikbaar, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.Beschikbaar)
                @Html.ValidationMessageFor(model => model.Beschikbaar, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
