//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rent_a_Car.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Entities : DbContext
    {
        public Entities()
            : base("name=Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Auto> Auto { get; set; }
        public virtual DbSet<AutoPrijs> AutoPrijs { get; set; }
        public virtual DbSet<AutoType> AutoType { get; set; }
        public virtual DbSet<Brandstof> Brandstof { get; set; }
        public virtual DbSet<BTW> BTW { get; set; }
        public virtual DbSet<SchakelType> SchakelType { get; set; }
        public virtual DbSet<Verhuring> Verhuring { get; set; }
    
        public virtual ObjectResult<Nullable<decimal>> spGetAutoPrice(Nullable<System.DateTime> cHECKINDATE, Nullable<int> autoTypeID)
        {
            var cHECKINDATEParameter = cHECKINDATE.HasValue ?
                new ObjectParameter("CHECKINDATE", cHECKINDATE) :
                new ObjectParameter("CHECKINDATE", typeof(System.DateTime));
    
            var autoTypeIDParameter = autoTypeID.HasValue ?
                new ObjectParameter("AutoTypeID", autoTypeID) :
                new ObjectParameter("AutoTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<decimal>>("spGetAutoPrice", cHECKINDATEParameter, autoTypeIDParameter);
        }
    }
}
